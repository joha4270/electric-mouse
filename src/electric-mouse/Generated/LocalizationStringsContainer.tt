<#@ template language="C#" hostspecific="True" #>
<#@ assembly name="Newtonsoft.Json.dll"#>
<#@ import namespace="System.IO"#>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Newtonsoft.Json" #>
<#
	string langpath = Path.Combine(System.IO.Path.GetDirectoryName(Host.TemplateFile), "..", "Lang", "en-GB.json");
	Dictionary<string, string> properties = JsonConvert.DeserializeObject<Dictionary<string, string>>(File.ReadAllText(langpath));
#>

/*
 * This file (LocalizationStringsContainer.cs) is autogenerated based on the content of 
 *		<#=langpath#>. 
 * Any changes made manually to this file will be undone.
 */

using System.Collections.Generic;
using Microsoft.Extensions.Logging;
namespace electric_mouse.Generated
{
	public class LocalizationStringContainer
	{
<#	foreach(KeyValuePair<string,string> kvp in properties)
	{	
#>
		public string <#= kvp.Key #> { get; }
<#
	}
#>

		public LocalizationStringContainer(Dictionary<string, string> languageDefinition, string language, ILogger<LanguageCache> log)
		{
<#	foreach(KeyValuePair<string,string> kvp in properties)
	{	
#>
			<#= kvp.Key #> = Get("<#= kvp.Key #>", language, languageDefinition, log);
<#
	}
#>
		}

		private string Get(string key, string language, Dictionary<string, string> languageDefinition, ILogger<LanguageCache> log)
		{
			string result;
			if(languageDefinition.TryGetValue(key, out result))
			{
				return result;
			}
			else
			{
				log.LogError($"Missing key \"{key}\" during loading of \"{language}");
				return key;
			}
		}

	}
}