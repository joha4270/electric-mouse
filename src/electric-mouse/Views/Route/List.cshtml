@using electric_mouse.Models.RouteItems
@model electric_mouse.Models.RouteViewModels.RouteListViewModel

@* Difficulty Test, do not attempt to make it work yourself *@
<div class="row" style="margin-top: 10px;">
    <div class="col s8">
@foreach (RouteDifficulty difficulty in Model.Difficulities)
{
    <a class="btn" style="padding: 0 1rem; background-color: @difficulty.ColorHex">
      <input
        type="checkbox"
        class="filled-in difficulty-checkbox"
        id="@("difficulty_ " + difficulty.RouteDifficultyID)"
        data-difficulty-id="@difficulty.RouteDifficultyID"
      />
      @*Text looks a little bit weird with borders, but jakob can always do his css magic*@
      <label for="@("difficulty_ " + difficulty.RouteDifficultyID)"
             style="color: #fff; text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;">
        @difficulty.Name
      </label>
    </a>
}
    </div>

  <div class="col s4">
    <form class="nav-search">
      <div class="input-field">
        <i class="material-icons prefix" style="bottom: 8px;">search</i>
        <input id="search" type="search" required>
        <label for="search">Search</label>
        <i class="material-icons">close</i>
      </div>
    </form>
  </div>
</div>

@* Table *@
<div class="row">
  <table class="table">
    <thead>
    <tr>
      <th class="app_id">#</th>
      <th class="app_section">Section</th>
      <th class="app_difficulty">Difficulty</th>
      <th class="app_color">Grip Color</th>
      <th class="app_builder">Builders</th>
      <th class="app_date">Date</th>
      <th class="app_note">Note</th>
    </tr>
    </thead>
    <tbody class="app_routetable" id="central_route_table">
    @foreach (var item in Model.Routes)
    {
        int i = 0;
        <tr data-id="@item.ID">
          <td class="app_id">@item.RouteID</td>
          <td class="app_section">@string.Join(", ", item.Sections.Select(x => x.Name))</td>
          <td data-filter="@item.Difficulty.RouteDifficultyID"><div class="color-circle" style="background-color: @item.Difficulty.ColorHex"></div>@item.Difficulty.Name</td>
          <td class="app_color">@item.GripColour</td>
          <td class="app_builder">@string.Join(", ", item.Creators.Select(x => x.User.DisplayName))</td>
          <td class="app_date">@item.Date.ToString("dd-MM-yy")</td>
          <td class="app_note">@item.Note</td>
        </tr>
    }

    </tbody>
  </table>
</div>

<div class="fixed-action-btn">
  <a class="btn-floating btn-large red" href="/route/create">
    <i class="large material-icons">add</i>
  </a>
</div>
@{ Html.RenderPartial("_Loading"); }
@section scripts
{
  <script>
	  $(document).ready(function() {
		  $('#search').keyup(function(){
			  table.search($(this).val()).draw();
		  });

		  $('tbody tr').click(function () {
			  var id = $(this).attr('data-id');
			  viewRoute(id);
		  });

		  initRouteTable();

		  $(".difficulty-checkbox").click(function() {
			  difffield = $(".difficulty-checkbox:checked").map(function(){return $(this).attr("data-difficulty-id");}).get();
			  table.draw();
		  });
		  $.fn.dataTable.ext.search.push(difficultySearchFilter);

		  @if (Model.ModalContent != null)
		  {
			  @Html.Raw("setupReply();")
		  }

  });

  </script>
}
@if(Model.ModalContent != null)
{
    @section modal
    { 
        @Html.Partial(Model.ModalContent.ViewName, Model.ModalContent.Model)
    }
}