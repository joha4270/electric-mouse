@model electric_mouse.Models.RouteViewModels.RouteCreateViewModel
<h2>Stuff</h2>
<form asp-controller="Route" asp-action="@(Model.UpdateID < 0 ? "Create" : "Update")" method="post" enctype="multipart/form-data" class="col s12">
    <input asp-for="UpdateID" value="@Model.UpdateID" type="hidden" />
  <div class="row">
    <div class="input-field col s2">
      <input type="number" min="1" name="RouteID" value="@Model.RouteID" />
      <label for="id">Route ID</label>
    </div>
    <div class="input-field col s10">
      <select asp-for="RouteHallID" asp-items="@Model.Halls.Select(h => new SelectListItem {Text = h.Name, Value = h.RouteHallID.ToString() })" id="hallSelect">
@if (Model.UpdateID < 0)
{
        <option value="" disabled selected>Select a Hall</option>
}
      </select>
      <label>Hal</label>
    </div>
  </div>

  <div class="row">
    <div class="input-field col s6">
        <select asp-for="RouteDifficultyID" asp-items="@Model.Difficulties.Select(d => new SelectListItem { Text = d.Name, Value = d.RouteDifficultyID.ToString() }) ">
            @if (Model.UpdateID < 0)
            {
            <option value="" disabled selected>Select a Difficulity</option>
            }
        </select>
      <label>Difficulty</label>
    </div>
    <div class="input-field col s6">
      <select>
        <option value="1">Boulder</option>
      </select>
      <label>Route Type</label>
    </div>
  </div>

  <div class="row">
    <div class="input-field col s12">
      <select asp-for="RouteSectionID" asp-items="@(Model.UpdateID > 0 ? Model.Sections.Where(x => x.RouteHallID == Model.RouteHallID).Select(s => new SelectListItem { Text = s.Name, Value = s.RouteSectionID.ToString() }) : new SelectListItem[] { })" id="SectionSelect" multiple>
        <option value="" disabled selected>No Sections Found</option>
      </select>
      <label asp-for="Sections">Section</label>
    </div>
  </div>

  <div class="row">
    <div class="input-field col s12">
      <label asp-for="Date">Date</label>
      <input type="date" class="datepicker" name="Date">
    </div>
  </div>

  <div class="row">
    <div class="input-field col s12">
      <input id="GripColor" type="text" name="GripColor">
      <label asp-for="GripColor">Grip Color</label>
    </div>
  </div>

  <div class="row">
    <div class="input-field col s12">
        <input type="text" name="VideoUrl" />
        <label asp-for="VideoUrl">VideoUrl</label>
    </div>
  </div>

    @* IMAGE UPLOAD *@
    <div class="row">
        Upload billede
        @*<input type="file" asp-for="Images" multiple/>*@
       <input type="file" name="Images[]" id="filer_input" multiple>
    </div>


  <div class="row">
    <div class="input-field col s12">
      <textarea id="textarea1" class="materialize-textarea" name="Note">@Model.Note</textarea>
      <label for="textarea1">Note</label>
    </div>
  </div>

  <div class="row">
    <div class="col s12">
      <button class="btn waves-effect waves-light red right" type="submit">
        Create Route
        <i class="material-icons right">send</i>
      </button>
    </div>
  </div>
</form>

@section scripts {

<script>
    var sections = {
        @foreach (var hall in Model.Halls)
        {
            @Html.Raw("'")@hall.RouteHallID@Html.Raw("': {")
             foreach (var s in Model.Sections.Where(i => i.RouteHallID == hall.RouteHallID))
             {
                 @Html.Raw("'")@s.RouteSectionID@Html.Raw("': '")@s.Name@Html.Raw("',")
             }
            @Html.Raw("},\n")
        }
    };

    $("#hallSelect").on('change', function() {
        var data = "";
        var parent = $(this).val();
        $.each(sections[parent], function(key, val) {
            data += '<option value="' + key + '">' + val + '</option>';
        });
        if(data == "") {data = '<option value="" disabled selected>No Sections Found</option>'}
        $("#SectionSelect").material_select("destroy");
        $("#SectionSelect").html(data);
        $("#SectionSelect").material_select();
    });

    $(document).ready(function () {
        $('#filer_input').filer({ showThumbs: true });
    });
        //Example 2
    //    $("#filer_input").filer({
    //        limit: null,
    //        maxSize: null,
    //        extensions: null,
    //        changeInput: '<div class="jFiler-input-dragDrop"><div class="jFiler-input-inner"><div class="jFiler-input-icon"><i class="icon-jfi-cloud-up-o"></i></div><div class="jFiler-input-text"><h3>Drag&Drop files here</h3> <span style="display:inline-block; margin: 15px 0">or</span></div><a class="jFiler-input-choose-btn blue">Browse Files</a></div></div>',
    //        showThumbs: true,
    //        theme: "dragdropbox",
    //        templates: {
    //            box: '<ul class="jFiler-items-list jFiler-items-grid"></ul>',
    //            item: '<li class="jFiler-item">\
	//					<div class="jFiler-item-container">\
	//						<div class="jFiler-item-inner">\
	//							<div class="jFiler-item-thumb">\
	//								<div class="jFiler-item-status"></div>\
	//								<div class="jFiler-item-thumb-overlay">\
	//									<div class="jFiler-item-info">\
	//										<div style="display:table-cell;vertical-align: middle;">\
	//											<span class="jFiler-item-title"><b title="{{fi-name}}">{{fi-name}}</b></span>\
	//											<span class="jFiler-item-others">{{fi-size2}}</span>\
	//										</div>\
	//									</div>\
	//								</div>\
	//								{{fi-image}}\
	//							</div>\
	//							<div class="jFiler-item-assets jFiler-row">\
	//								<ul class="list-inline pull-left">\
	//									<li>{{fi-progressBar}}</li>\
	//								</ul>\
	//								<ul class="list-inline pull-right">\
	//									<li><a class="icon-jfi-trash jFiler-item-trash-action"></a></li>\
	//								</ul>\
	//							</div>\
	//						</div>\
	//					</div>\
	//				</li>',
    //            itemAppend: '<li class="jFiler-item">\
	//						<div class="jFiler-item-container">\
	//							<div class="jFiler-item-inner">\
	//								<div class="jFiler-item-thumb">\
	//									<div class="jFiler-item-status"></div>\
	//									<div class="jFiler-item-thumb-overlay">\
	//										<div class="jFiler-item-info">\
	//											<div style="display:table-cell;vertical-align: middle;">\
	//												<span class="jFiler-item-title"><b title="{{fi-name}}">{{fi-name}}</b></span>\
	//												<span class="jFiler-item-others">{{fi-size2}}</span>\
	//											</div>\
	//										</div>\
	//									</div>\
	//									{{fi-image}}\
	//								</div>\
	//								<div class="jFiler-item-assets jFiler-row">\
	//									<ul class="list-inline pull-left">\
	//										<li><span class="jFiler-item-others">{{fi-icon}}</span></li>\
	//									</ul>\
	//									<ul class="list-inline pull-right">\
	//										<li><a class="icon-jfi-trash jFiler-item-trash-action"></a></li>\
	//									</ul>\
	//								</div>\
	//							</div>\
	//						</div>\
	//					</li>',
    //            progressBar: '<div class="bar"></div>',
    //            itemAppendToEnd: false,
    //            canvasImage: true,
    //            removeConfirmation: true,
    //            _selectors: {
    //                list: '.jFiler-items-list',
    //                item: '.jFiler-item',
    //                progressBar: '.bar',
    //                remove: '.jFiler-item-trash-action'
    //            }
    //        },
    //        dragDrop: {
    //            dragEnter: null,
    //            dragLeave: null,
    //            drop: null,
    //            dragContainer: null,
    //        },
    //        files: null,
    //        addMore: false,
    //        allowDuplicates: true,
    //        clipBoardPaste: true,
    //        excludeName: null,
    //        beforeRender: null,
    //        afterRender: null,
    //        beforeShow: null,
    //        beforeSelect: null,
    //        onSelect: null,
    //        afterShow: null,
    //        onRemove: function (itemEl, file, id, listEl, boxEl, newInputEl, inputEl) {
    //            var filerKit = inputEl.prop("jFiler"),
    //                file_name = filerKit.files_list[id].name;

    //            $.post('./php/ajax_remove_file.php', { file: file_name });
    //        },
    //        onEmpty: null,
    //        options: null,
    //        dialogs: {
    //            alert: function (text) {
    //                return alert(text);
    //            },
    //            confirm: function (text, callback) {
    //                confirm(text) ? callback() : null;
    //            }
    //        },
    //        captions: {
    //            button: "Choose Files",
    //            feedback: "Choose files To Upload",
    //            feedback2: "files were chosen",
    //            drop: "Drop file here to Upload",
    //            removeConfirmation: "Are you sure you want to remove this file?",
    //            errors: {
    //                filesLimit: "Only {{fi-limit}} files are allowed to be uploaded.",
    //                filesType: "Only Images are allowed to be uploaded.",
    //                filesSize: "{{fi-name}} is too large! Please upload file up to {{fi-maxSize}} MB.",
    //                filesSizeAll: "Files you've choosed are too large! Please upload files up to {{fi-maxSize}} MB."
    //            }
    //        }
    //    });
    //});

</script>
}